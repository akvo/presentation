#+PROPERTY: header-args:bash :exports both
#+PROPERTY: header-args:bash+ :results output
#+STARTUP: showall

:REVEAL_PROPERTIES:
#+REVEAL_TITLE_SLIDE: Akvo Flow API
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_EXTRA_CSS: file:///home/dedenbangkit/Repos/akvorepos/presentation/css/akvo.css
:END:

#+TITLE: Akvo FLow API
#+AUTHOR: Deden Bangkit

* Setup Project Output

**  Executable JAR File

#+BEGIN_NOTES
Before begin the session, let see how to make our project easy to execute
and also to see the use of the output result.
We are going to compile the Akvo Flow API Example Project with it's external library
To single a file.
#+END_NOTES

Compile the Akvo Flow API Example Project to a single file

** Project Setup

- Go to File > Project Structure *CTRL + ALT + SHIFT + S*
- Select *Artifacts* under Project Settings, click *+* button
- Select JAR > From modules with dependencies
- Select the **Main Class** (which is the class that has static main method), then click OK
- Also don't forget to make sure that *extract to the target JAR* is checked

Now remember the path of output directory, where the JAR file will be produced.

** Build

Once the setup is done, now you will be able to Build the JAR file by going to:

*Build > Build Artifact > Build*

Congrats! Your first JAR is there!

** How to Execute

Go to the output directory via Terminal (Linux) / Command Prompt (Windows)
You can run

#+begin_src bash
  java --jar <your_jar_path>
#+end_src

** Command Line Arguments

Command line arguments are nothing but simply arguments that
are specified after the name of the program in the system's command line,
and these argument values are passed on to your program during program execution.

#+BEGIN_NOTES
In the code example we can already see in the Main.java
Let say you want to have API endpoint as the argument
We can replace the url with *args[0]*
#+END_NOTES

*** Example

#+begin_src bash
  java --jar AkvoFlowExample.jar "https://api-auth0.akvo.org/flow/orgs/maep/folders"
#+end_src

The first argument will passed to Main.java as parameters

*** Lets try to print the input argument in to the first line

#+begin_src java
  System.out.println(args[0]);
#+end_src

* Coding Exercise

#+BEGIN_NOTES
There are lots of posibility using Akvo Flow
Syncing data to Partners Database, Generating Summary, Interactive and many other
But for now, let try the simpliest one, print out the JSON of the url
#+END_NOTES

** API Endpoint as Parameter

Let try the simpliest one, print out the JSON response of the url

#+begin_src bash
  java --jar AkvoFlowExample.jar "https://api-auth0.akvo.org/flow/orgs/maep/folders"
#+end_src

** Produce CSV File

Please download the newest zip file from GitHub, then go to today presentation directory.

#+BEGIN_NOTES
Explain line by line
#+END_NOTES

** Tryout

Lets do the same thing but for *Survey List* endpoint!
Break to 2 groups... Back in 1 hour

** Group Presentation

Explain the method you have tried.
